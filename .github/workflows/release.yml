name: 'release'

on:
  push:
    tags: ['*']

jobs:
  deploy-nacc-release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      WORDPRESS_USERNAME: ${{ secrets.WORDPRESS_USERNAME }}
      WORDPRESS_PASSWORD: ${{ secrets.WORDPRESS_PASSWORD }}
      BUILD_DIR: build
      DIST_DIR_S3_JS: dist_naccjs/s3
      DIST_DIR_S3: dist/s3
      DIST_DIR_GITHUB_JS: dist_naccjs/github
      DIST_DIR_GITHUB: dist/github
      GITHUB_RELEASE_FILENAME_JS: naccjs.zip
      GITHUB_RELEASE_FILENAME: nacc-wordpress-plugin.zip
      S3_KEY_JS: naccjs
      S3_KEY: nacc-wordpress-plugin
      PLUGIN: nacc-wordpress-plugin
      MAINFILE: nacc-wordpress-plugin.php
    steps:
      - name: Check out code 🛒
        uses: actions/checkout@v3

      - name: Build nacc zip file 🔧
        run: |
          export ZIP_FILENAME_JS=naccjs-build${GITHUB_RUN_NUMBER}-${GITHUB_SHA}.zip
          echo "ZIP_FILENAME_JS=${ZIP_FILENAME_JS}" >> $GITHUB_ENV
          export ZIP_FILENAME=nacc-wordpress-plugin-build${GITHUB_RUN_NUMBER}-${GITHUB_SHA}.zip
          echo "ZIP_FILENAME=${ZIP_FILENAME}" >> $GITHUB_ENV
          echo "GITHUB_RELEASE_FILENAME_JS=${GITHUB_RELEASE_FILENAME_JS}" >> $GITHUB_ENV
          echo "GITHUB_RELEASE_FILENAME=${GITHUB_RELEASE_FILENAME}" >> $GITHUB_ENV
          echo "GITHUB_RELEASE_PATH_JS=${DIST_DIR_GITHUB_JS}/${GITHUB_RELEASE_FILENAME_JS}" >> $GITHUB_ENV
          echo "GITHUB_RELEASE_PATH=${DIST_DIR_GITHUB}/${GITHUB_RELEASE_FILENAME}" >> $GITHUB_ENV
          echo "ARTIFACT_PATH_JS=${GITHUB_RELEASE_PATH_JS}" >> $GITHUB_ENV
          echo "ARTIFACT_NAME_JS=${GITHUB_RELEASE_FILENAME_JS}" >> $GITHUB_ENV
          echo "ARTIFACT_PATH=${GITHUB_RELEASE_PATH}" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=${GITHUB_RELEASE_FILENAME}" >> $GITHUB_ENV
          find ./ -type d | xargs chmod 755
          find ./ -name '*.php' | xargs chmod 644
          git archive --format=zip --output=${ZIP_FILENAME} ${GITHUB_SHA}
          zip -r ${ZIP_FILENAME_JS} nacc2/*
          TAG="${GITHUB_REF##*/}"
          mkdir -p $BUILD_DIR && mv $ZIP_FILENAME_JS $BUILD_DIR/ && mv $ZIP_FILENAME $BUILD_DIR/
          mkdir -p $DIST_DIR_S3_JS && cp $BUILD_DIR/$ZIP_FILENAME_JS $DIST_DIR_S3_JS/$ZIP_FILENAME_JS
          mkdir -p $DIST_DIR_GITHUB_JS && cp $BUILD_DIR/$ZIP_FILENAME_JS $DIST_DIR_GITHUB_JS/$GITHUB_RELEASE_FILENAME_JS
          mkdir -p $DIST_DIR_S3 && cp $BUILD_DIR/$ZIP_FILENAME $DIST_DIR_S3/$ZIP_FILENAME
          mkdir -p $DIST_DIR_GITHUB && cp $BUILD_DIR/$ZIP_FILENAME $DIST_DIR_GITHUB/$GITHUB_RELEASE_FILENAME

      - name: Generate Release Notes 📝
        if: github.ref_type == 'tag'
        run: |
          curl -LO https://raw.githubusercontent.com/bmlt-enabled/release-notes-tool/master/gh-release-notes.sh
          chmod +x gh-release-notes.sh
          ./gh-release-notes.sh readme.txt "wp"
          RELEASE_TYPE=$(if [[ "$GITHUB_REF_NAME" =~ "beta" ]]; then echo "true"; else echo "false"; fi)
          echo "RELEASE_TYPE=${RELEASE_TYPE}" >> $GITHUB_ENV

      - name: Create Release 🎉
        uses: ncipollo/release-action@v1.11.1
        if: github.ref_type == 'tag'
        with:
          artifacts: ${{ env.ARTIFACT_PATH }},${{ env.ARTIFACT_PATH_JS }}
          bodyFile: "changelog.txt"
          prerelease: ${{ env.RELEASE_TYPE }}

      #      - name: Wordpress Release ⛴
      #        if: "!contains(github.ref, 'beta')"
      #        id: wordpress-stable-release
      #        env:
      #          WORDPRESS_USERNAME : ${{ secrets.WORDPRESS_USERNAME }}
      #          WORDPRESS_PASSWORD : ${{ secrets.WORDPRESS_PASSWORD }}
      #        run: |
      #          curl -LO https://raw.githubusercontent.com/bmlt-enabled/bmlt-wordpress-deploy/master/deploy-wordpress.sh
      #          chmod +x deploy-wordpress.sh
      #          ./deploy-wordpress.sh
